https://eastglow.github.io/back-end/2018/11/05/Spring-Interceptor%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%EC%84%B8%EC%85%98-%EB%B0%8F-%EA%B6%8C%ED%95%9C-%EC%B2%B4%ED%81%AC-%ED%95%98%EA%B8%B0.html


Interceptor는 DispatcherServlet이 실행된 후(= Controller로 가기 전), Filter는 DispatcherServlet이 실행되기 전에 호출

```web.xml
<!-- dispatcher-servlet.xml -->
<servlet>
    <servlet-name>action</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>/WEB-INF/config/egovframework/springmvc/*.xml</param-value> 
    </init-param>
    <load-on-startup>1</load-on-startup>
</servlet>
```

```AuthInterceptor.java
public class AuthInterceptor extends WebContentInterceptor {

    /**
     * 세션에 계정정보(SessionVO)가 있는지 여부로 인증 여부를 체크한다. 계정정보(SessionVO)가 없다면, 로그인 페이지로 이동한다.
     */
    @Override
    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws ServletException {
        SessionVO sessionVo = null;

        try {
            sessionVo = (SessionVO) SessionUtil.getSessionAttribute(request, "sessUser");

            if (sessionVo != null && sessionVo.getSessUserID() != null) {
                return true;
            } else {
                ModelAndView modelAndView = new ModelAndView("redirect:/forward.do");
                modelAndView.addObject("msgCode", "세션이 만료되어 로그아웃 되었습니다. 다시 로그인 해주세요.");
                modelAndView.addObject("returnUrl", "/login.do");
                throw new ModelAndViewDefiningException(modelAndView);
            }
        } catch (Exception e) {
            ModelAndView modelAndView = new ModelAndView("redirect:/forward.do");
            modelAndView.addObject("msgCode", "세션이 만료되어 로그아웃 되었습니다. 다시 로그인 해주세요.");
            modelAndView.addObject("returnUrl", "/login.do");
            throw new ModelAndViewDefiningException(modelAndView);
        }
    }

    /**
     * 세션에 메뉴권한(SessionVO)이 있는지 여부로 메뉴권한 여부를 체크한다. 계정정보(SessionVO)가 없다면, 로그인 페이지로 이동한다.
     */
    @Override
    public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) throws Exception {
        SessionVO sessionVo = null;
        String requestURI = request.getRequestURI();

        try {
            if (!requestURI.equals("/index.do")) {
                sessionVo = (SessionVO) SessionUtil.getSessionAttribute(request, "sessUser");

                if (sessionVo != null && sessionVo.getSessUserID() != null) { // 세션이 있을 경우만 체크
                    HashMap<String, Object> menuAuthMap = (HashMap<String, Object>) modelAndView.getModel().get("menuAuth");
                    String sessUserAuth = sessionVo.getSessUserAuth();
                    String menuCode = String.valueOf(menuAuthMap.get("menuCode"));
                    boolean authCheck = false;
                    StringTokenizer st = new StringTokenizer(sessUserAuth, ",");

                    while (st.hasMoreTokens()) {
                        String authCode = st.nextToken();
                        if (menuCode.equals(authCode)) {
                            authCheck = true;
                        }
                    }

                    if (!authCheck) {
                        ModelAndView mav = new ModelAndView("redirect:/forward.do");
                        mav.addObject("msgCode", "권한이 없습니다.");
                        mav.addObject("returnUrl", "/index.do");
                        throw new ModelAndViewDefiningException(mav);
                    }
                } else { // 세션이 없으면 로그인 페이지로 이동
                    ModelAndView mav = new ModelAndView("redirect:/forward.do");
                    mav.addObject("msgCode", "세션이 만료되어 로그아웃 되었습니다. 다시 로그인 해주세요.");
                    mav.addObject("returnUrl", "/login.do");
                    throw new ModelAndViewDefiningException(mav);
                }
            }
        } catch (Exception e) { // 그 외 예외사항은 index로 이동
            ModelAndView mav = new ModelAndView("redirect:/forward.do");
            mav.addObject("msgCode", "권한이 없습니다.");
            mav.addObject("returnUrl", "/index.do");
            throw new ModelAndViewDefiningException(mav);
        }
    }
}
```
